@using BlazorBootstrap
@using DevExpress.Blazor;
@using NFCWebBlazor.App_ClassDefine;
@using System.Data
<style>
    .my-grid {
        height: @heightgrid;
    }

    .highRed {
        color: red;
        font-weight: bold
    }

    .highGreen {
        color: Green;
        font-weight: bold
    }

    .highlighted-item > td {
        background-color: lightgray;
        color: #0070ff;
        font-weight: bold;
    }
</style>
<DxGridLayout CssClass="w-100 ch-480">

    <Rows>
        <DxGridLayoutRow Height="Auto" />
        <DxGridLayoutRow Height="Auto" />
        <DxGridLayoutRow />
    </Rows>

    <Items>

        <DxGridLayoutItem Row="0">
            <Template>
                <div class="p-2 pt-0 mb-2 bg-white border rounded-bottom-2">
                    <DxTextBox NullText="Tìm kiếm chi tiết" onclick="@Showdivsearch">
                        <Buttons>
                            <DxEditorButton Position=EditorButtonPosition.Left IconCssClass="bi bi-search" Click="@Showdivsearch" />
                        </Buttons>
                    </DxTextBox>
                   
                    <div class="@divClass">

                        <DxFormLayout CssClass="w-100 mt-3">

                            <DxFormLayoutItem Caption="Chọn nhà máy" ColSpanLg="4" ColSpanMd="6">
                                <ComboboxFilteredTable @ref=txtnhamay ListRenderMode="ListRenderMode.Virtual"
                                                       FilteringMode="DataGridFilteringMode.Contains"
                                                       TypeName="NhaMay_NVL"
                                                       ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                       TextFieldName="@nameof(DataDropDownList.FullName)"
                                                       @bind-Value="@nhamayselected"
                                                       CssClass="cw-480" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Loại báo cáo" ColSpanLg="4" ColSpanMd="6">
                                <ComboboxFilteredTable @ref=txtloaibaocao ListRenderMode="ListRenderMode.Virtual"
                                                       FilteringMode="DataGridFilteringMode.Contains"
                                                       TypeName="BaoCaoNangSuatQLSX"
                                                       ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                       TextFieldName="@nameof(DataDropDownList.FullName)"
                                                       @bind-Value="@baocaoselected"
                                                       CssClass="cw-480" />
                            </DxFormLayoutItem>
                           
                            <DxFormLayoutItem Caption="Gộp theo" ColSpanLg="4" ColSpanMd="6">
                                <ComboboxFilteredTable @ref=txtgoptheo ListRenderMode="ListRenderMode.Virtual"
                                                       FilteringMode="DataGridFilteringMode.Contains"
                                                       TypeName="TypeBangKeThoiGian"
                                                       ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                                                       TextFieldName="@nameof(DataDropDownList.FullName)"
                                                       @bind-Value="@goptheoselected"
                                                       CssClass="cw-480" />

                            </DxFormLayoutItem>


                            <DxFormLayoutItem Caption="Từ ngày" ColSpanLg="4" ColSpanMd="6">

                                <DxDateEdit @bind-Date="@dtpbegin" Mask="@DateTimeMask.ShortDate" DisplayFormat="dd-MM-yy" />

                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Đến" ColSpanLg="4" ColSpanMd="6">
                                <DxDateEdit @bind-Date="@dtpend" Mask="@DateTimeMask.ShortDate" DisplayFormat="dd-MM-yy" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem ColSpanMd="12">
                                <Template>
                                    <div class="d-flex justify-content-center m-2">
                                        <DxButton RenderStyle="ButtonRenderStyle.Primary" CssClass="bi bi-search m-1" Click=@search
                                                  RenderStyleMode="ButtonRenderStyleMode.Outline" Text="XEM">
                                        </DxButton>
                                    </div>
                                </Template>
                            </DxFormLayoutItem>
                        </DxFormLayout>

                    </div>
                </div>

            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="1">
            <Template>

            </Template>
        </DxGridLayoutItem>
        <DxGridLayoutItem Row="2">
            <Template>
                <DxGrid @ref=dxGrid
                        CssClass="my-grid"
                        ShowFilterRow="true"
                        CustomizeElement="OnCustomizeElement"
                        ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                        PageSize="20"
                        AllowSelectRowByClick="true"
                        EditMode="GridEditMode.PopupEditForm"
                        PopupEditFormHeaderText="Chỉnh sửa"
                        PagerNavigationMode="PagerNavigationMode.InputBox"
                        PageSizeSelectorVisible="true"
                        PageSizeSelectorAllRowsItemVisible="true"
                        PageSizeSelectorItems="@(new int[] { 20,30,50 })"
                        EditFormButtonsVisible="false"
                        VirtualScrollingEnabled="true"
                        FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                        Data=@dtresultfinal
                        AutoExpandAllGroupRows="true">
                    <Columns>
                        <DxGridDataColumn Caption="%Hoàn thành" Width="150">
                            <CellDisplayTemplate>
                                @{
                                    var row = (DataRowView)context.DataItem;
                                    double tyle = 0;
                                    tyle = getdoubleofobject(row["TyLe"]);
                                }
                                @if (tyle >= 0)
                                {
                                    <ProgressBarDf value=@tyle></ProgressBarDf>
                                }
                            </CellDisplayTemplate>
                        </DxGridDataColumn>
                        @if (visiblechart)
                        {
                            <DxGridDataColumn Width="310">
                                <HeaderCaptionTemplate>
                                    <div class="row">
                                        <div style="width: 300px">
                                            <div class="progress mb-1" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%;height: 12px;">
                                                <div class="progress-bar bg-primary" style="font-size:9px;width:100%">
                                                    @titlechart
                                                </div>
                                            </div>
                                            <div class="progress-stacked" style="height:12px;">

                                                <div class="progress" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:50%;height: 12px;">
                                                    <div class="progress-bar bg-success" style="font-size:9px;">
                                                        @titlecharttonkho
                                                    </div>
                                                </div>
                                                <div class="progress" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:50%;height: 12px;">
                                                    <div class="progress-bar bg-info" style="font-size:9px;">@titlechartthuchien</div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </HeaderCaptionTemplate>
                                <CellDisplayTemplate>
                                    @{
                                        DataRowView? datarow;
                                        if (visiblechart)
                                            datarow = (DataRowView)context.DataItem;
                                        else
                                            datarow = null;

                                    }
                                    @if (datarow != null)
                                    {
                                        @if ((bool)datarow["VisibleChart"])
                                        {
                                            <div class="row">
                                                <div style="width: 300px">
                                                    <div class="progress mb-1" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%;height: 12px;">
                                                        <div class="progress-bar bg-primary" style="font-size:9px;width:100%">
                                                            @getdoubleofobject(datarow["SLDHConLai"]).ToString("#,#")
                                                        </div>
                                                    </div>
                                                    <div class="progress-stacked" style="height:12px;">

                                                        <div class="progress" role="progressbar" aria-valuenow=@getdoubleofobject(datarow["wSLTonKho"]) aria-valuemin="0" aria-valuemax="100" style=@($"width:{getdoubleofobject(datarow["wSLTonKho"])}%;height: 12px;")>
                                                            <div class="progress-bar bg-success" style="font-size:9px;">
                                                                @getdoubleofobject(datarow["SLTonKho"]).ToString("#,#")
                                                            </div>
                                                        </div>
                                                        <div class="progress" role="progressbar" aria-valuenow=@getdoubleofobject(datarow["wchart2"]) aria-valuemin="0" aria-valuemax="100" style=@($"width:{@getdoubleofobject(datarow["wchart2"])}%;height: 12px;")>
                                                            <div class="progress-bar bg-info" style="font-size:9px;">@getdoubleofobject(datarow["chart2"])</div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </CellDisplayTemplate>
                            </DxGridDataColumn>
                        }
                    
                            @buildrender()
                        

                    </Columns>
                    <ToolbarTemplate>
                        <DxToolbar>
                            <DxToolbarItem Text="Xuất file Excel" Click="ExportXlsx_Click" />

                        </DxToolbar>
                    </ToolbarTemplate>


                </DxGrid>
            </Template>
        </DxGridLayoutItem>

    </Items>
</DxGridLayout>
@code {
    [Inject] PreloadService PreloadService { get; set; }
    [Inject] IJSRuntime JS { get; set; }
    string heightgrid = "500px";
    string divClass = "expandable-content";
    bool visiblechart = false;
    public int widthtotal = 250;
    string titlechart = "Đơn hàng chưa xuất";
    string titlecharttonkho = "Tồn kho";
    string titlechartthuchien = "Kế hoạch";
    ComboboxFilteredTable txtnhamay { get; set; }
    DataDropDownList nhamayselected { get; set; }
    List<NvlKhachHang> lstkhachhang { get; set; }

    ComboboxFilteredTable txtloaibaocao { get; set; }

    ComboboxFilteredTable txtgoptheo { get; set; }

    List<SanPhamDropDown> lstsanpham { get; set; }
    NvlKhachHang khachhangselected { get; set; }
    SanPhamDropDown sanphamselected { get; set; }
    DataDropDownList baocaoselected { get; set; }
    DataDropDownList goptheoselected { get; set; }
    DateTime? dtpbegin { get; set; } = DateTime.Now;
    DateTime? dtpend { get; set; } = DateTime.Now;
    public DxGrid dxGrid { get; set; }
    DxContextMenu ContextMenu { get; set; }
    DataTable dtresultfinal = new DataTable();


    List<InitDxGridDataColumn> lstcolumn = new List<InitDxGridDataColumn>();
    async Task ExportXlsx_Click()
    {
        await dxGrid.ExportToXlsxAsync("ExportResult");
    }
    async Task ExportCsv_Click()
    {
        await dxGrid.ExportToCsvAsync("ExportResult");
    }
    void OnCustomizeElement(GridCustomizeElementEventArgs e)
    {

        if (e.ElementType == GridElementType.DataRow)
        {
            foreach(var it in lstcolumn)
            {
                if(it.FieldName=="MaSP")
                {
                    if ((string)e.Grid.GetRowValue(e.VisibleIndex, "MaSP") == "---")
                    {
                        e.CssClass = "highlighted-item";
                    }
                }
            }
          
        }
        if (e.ElementType == GridElementType.DataCell)
        {
            var dataColumn = (IGridDataColumn)e.Column;
            switch (dataColumn.FieldName)
            {
                case "SLThucHien":
                    e.CssClass = "highGreen";
                    break;
                case "SLDatKH":
                    e.CssClass = "highGreen";
                    break;
               case "Total":
                 e.CssClass = "highGreen";
                    break;
                case "ConLai":
                    e.CssClass = "highRed";
                    break;
                case "TenMau":
                    var colorhex = e.Grid.GetRowValue(e.VisibleIndex, "Colorhex");
                    if (colorhex != null)
                    {
                        e.Style = string.Format("background-color:{0}", colorhex.ToString());
                    }

                    break;

            }
        }
    }
    private bool isExpanded = false;

    // Hàm xử lý sự kiện click của nút
    private void hidedivsearch()
    {
        isExpanded = false;
        divClass = "expandable-content";
    }
    private void Showdivsearch()
    {
        isExpanded = !isExpanded;

        if (isExpanded)
        {

            divClass = "expandable-content show";
        }
        else
        {

            divClass = "expandable-content";
        }
    }
    public double getdoubleofobject(object ob)
    {
        if (ob == null || ob == DBNull.Value)
            return 0;
        return double.Parse(ob.ToString());
    }

}