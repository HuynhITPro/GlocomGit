@using DevExpress.Blazor;
@using NFCWebBlazor.Model
@using Newtonsoft.Json
@using System.Collections.ObjectModel
@inject ThemeColor themeColor;
<style>
    .dxbl-menu-item {
    padding: 0.3rem;
    }
    .sidebar {
        max-height: 100%; /* Giới hạn chiều cao menu */
        overflow-y: auto; /* Hiển thị thanh cuộn */
    }
    .dxbl-image {
    --dxbl-image-height: 1.2rem;
    --dxbl-image-width: 1.2rem;
    }
    .dxbl-menu .dxbl-menu-item-list > .dxbl-menu-list-item > .dxbl-menu-item > .dxbl-btn {
    --dxbl-btn-border-radius: 0.4rem;
        color: #007300;
    }

    .dxbl-menu .dxbl-menu-item-list {
        --dxbl-btn-border-radius: 0.4rem;
        color: #007300;
       
    }
   
    .dxbl-menu .dxbl-menu-item-list > .dxbl-menu-list-item > .dxbl-menu-item > .dxbl-btn > span {
    font-size: 1.5rem;

    }

    .dxbl-menu-dropdown.dxbl-dropdown-dialog > .dxbl-dropdown-body .dxbl-menu-item-list > .dxbl-menu-list-item > .dxbl-menu-item > .dxbl-btn > span {
    font-size: 1.5rem;
    }

    .dxbl-menu-dropdown.dxbl-dropdown-dialog {
    --dxbl-dropdown-border-radius: 0.4rem;

    }


    .dxbl-menu-dropdown {
    --dxbl-menu-item-hover-color: @themeColor.ColorPrimary;
    --dxbl-menu-item-selected-color: @themeColor.ColorPrimary;
    --dxbl-menu-item-selected-hover-color: @themeColor.ColorPrimary;
    --dxbl-menu-dropdown-border-radius: 0.4rem;
    }

    .dxbl-menu-dropdown.dxbl-dropdown-dialog > .dxbl-dropdown-body .dxbl-menu-item-list > .dxbl-menu-list-item > .dxbl-menu-item > .dxbl-btn {
    --dxbl-btn-border-radius: 0.4rem;
    color: #007300;
    }


    .dxbl-menu-dropdown {
    --dxbl-menu-item-padding-y: 0.4rem;
    }

    .dxbl-menu.dxbl-menu-vertical {
    --dxbl-menu-item-padding-y: 0.4rem;
    }

    .dxbl-menu {
 
    --dxbl-menu-item-hover-color: @themeColor.ColorPrimary;
    --dxbl-menu-top-left-border-radius: 0.4rem;
    --dxbl-menu-top-right-border-radius: 0.4rem;
    --dxbl-menu-bottom-left-border-radius: 0.4rem;
    --dxbl-menu-bottom-right-border-radius: 0.4rem;
    --dxbl-menu-item-selected-hover-color: @themeColor.ColorPrimary;
    --dxbl-menu-item-selected-color: @themeColor.ColorPrimary;
    }

    .dxbl-dropdown-body
    {
        max-height:350px;
    }
</style>
<div class="sidebar @StateCssClass">

    <div class="p-1 bg-white rounded">
        <CascadingValue Name="addtab" Value="@GotoMainForm">
            @if (menuItems != null)
            {
                <DxMenu Id="menuid" @ref="dxMenu" Orientation=Orientation.Vertical CollapseItemsToHamburgerMenu="true" ItemsPosition="ItemPosition.Center" DisplayMode="DisplayMode">
                    <Items>
                        <AddMenuItem ListItems="menuItems" Nodeparent="@parentID" />
                    </Items>
                </DxMenu>
            }
        </CascadingValue>
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<MenuItem> GotoMainForm { get; set; }

    // [CascadingParameter(Name = "addtab")]
    // public EventCallback<MenuItem> cascadedValue { get; set; }

    [Parameter] public string? StateCssClass { get; set; }
    [Parameter]
    public List<MenuItem> menuItems { get; set; }
    [Parameter]
    public string parentID { get; set; }
    [CascadingParameter(Name = "checkmobile")]
    bool checkwidthscreen { get; set; }
    DevExpress.Blazor.DxMenu dxMenu;
    MenuDisplayMode DisplayMode { get; set; } = MenuDisplayMode.Auto;
    string SelectedGroup = "none";

    public void refreshmenu(List<MenuItem> _menuItems)
    {
        
        menuItems = _menuItems;
        parentID = Model.ModelAdmin.users.TypeApp;
        StateHasChanged();
    }
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            // Console.WriteLine("Menu Item load");

            //loadmenu();
        }
        if (!checkwidthscreen)
            DisplayMode = MenuDisplayMode.Desktop;
        else
            DisplayMode = MenuDisplayMode.Mobile;

        
        //base.OnAfterRender(firstRender);

    }

}