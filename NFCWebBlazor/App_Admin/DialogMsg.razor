@using DevExpress.Blazor
@implements IDisposable
<DxPopup @bind-Visible="@ConfirmationShown"
         HeaderText="@HeaderText"
         HeaderCssClass="confirmation-dialog-header"
         ShowCloseButton="false"
         CloseOnOutsideClick="false"
         
         CloseOnEscape="false"
         Width="400px">
    <BodyContentTemplate>
        <div>
          
            <span>@BodyText</span>
          
        </div>
        <div class="confirmation-dialog-content m-2 centerdf">
            <DxButton Text="Có" Click="YesClick" RenderStyle="ButtonRenderStyle.Primary"></DxButton>
            <DxButton Text="Không" Click="NoClick" RenderStyle="ButtonRenderStyle.Secondary" style="margin-left:20px;"></DxButton>
        </div>
    </BodyContentTemplate>
</DxPopup>
@code {
    bool ConfirmationShown { get; set; } = false;
    string HeaderText { get; set; } = string.Empty;
    string BodyText { get; set; } = string.Empty;
    TaskCompletionSource<bool> tcs;

    public Task<bool> Show(string headerText, string bodyText)
    {
        HeaderText = headerText;
        BodyText = bodyText;
        ConfirmationShown = true;
        InvokeAsync(StateHasChanged);

        tcs = new TaskCompletionSource<bool>();
        tcs.Task.ContinueWith(_ =>
        {
            ConfirmationShown = false;
            InvokeAsync(StateHasChanged);

        });
        return tcs.Task;
    }
    private void YesClick()
    {
        tcs.SetResult(true);

    }
    private void NoClick()
    {
        tcs.SetResult(false);


    }
    public void Dispose()
    {
        tcs = null;
    }



}
