@using BlazorBootstrap
@using DevExpress.Blazor;
@using NFCWebBlazor.App_ClassDefine;
@using System.Data
@using static NFCWebBlazor.App_ThongTin.Page_DinhMucNVLMaster
@using static NFCWebBlazor.App_NguyenVatLieu.App_KeHoachDeNghi.Page_KeHoachMuaHangMaster

<style>
    .my-grid {
    height: @heightgrid;
    }

    #griddetailnhapkhoms .dxbl-grid-header-row {
    display: contents;
    }

    #customGridnotheader .dxbl-grid-header-row {
    display: none;
    }

    #griddetailnhapkho .dxbl-grid-header-row {
    display: contents;
    color: green;
    }

    .highlighted-item > td {
    background-color: var(--bs-danger-border-subtle)
    }

    .custom-card {
    display: inline-flex;
    align-items: center;
    padding: 5px;
    border-radius: 50px; /* Bo tròn cả thẻ a */
    border: 1px solid #ccc; /* Viền sát thẻ a */
    text-decoration: none;
    transition: all 0.3s ease;
    }

    .custom-card span {
    font-size: 10px;
    color: #333;
    }

    .custom-card:hover {
    border-color: #007bff;
    background-color: #f0f8ff;
    }

</style>
<DxToastProvider Name="Template"
MaxToastCount="1"
Width="400px"
DisplayTime="@TimeSpan.Zero"
FreezeOnClick="true" />
<DxToast @ref=toastTextInput
Title="Chọn nhà cung cấp"
ProviderName="Template">
    <Template>
        <div class="row justify-content-center">
            <div class="m-1">
            </div>
            <div class="justify-content-center">
                <DxButton RenderStyle="ButtonRenderStyle.Success" RenderStyleMode="ButtonRenderStyleMode.Outline" Text="Xác nhận"></DxButton>
            </div>
        </div>
    </Template>
</DxToast>
<DxGridLayout CssClass="w-100">

    <Rows>
        <DxGridLayoutRow Height="Auto" />
        <DxGridLayoutRow />
    </Rows>
    <Items>
        <DxGridLayoutItem Row="0">
            <Template>
                <div id=@randomdivhide class="p-2 mb-2 bg-white border  rounded-2 rounded-top-0 collapse show">
                    <div>

                        <DxFormLayout CssClass="w-100" CaptionPosition="CaptionPosition.Vertical">
                            <DxFormLayoutItem Caption="Khách hàng" ColSpanXs="6" ColSpanSm="6" ColSpanMd="3" ColSpanLg="3">
                                <DxComboBox SearchFilterCondition="ListSearchFilterCondition.Contains"
                                ListRenderMode=ListRenderMode.Virtual
                                SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                                SearchMode="ListSearchMode.AutoSearch"
                                ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                                ValueFieldName="@nameof(DataDropDownList.Name)"
                                TextFieldName="@nameof(DataDropDownList.FullName)"
                                SelectedItemChanged="@((DataDropDownList sp)=>KhachHang_SelectedItemChanged(sp))"
                                Data="@lstKhachHang"
                                @bind-Value="@dinhMucVatTuShowcrr.KhachHang"
                                CssClass="cw-480" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Sản phẩm" ColSpanXs="12" ColSpanSm="12" ColSpanMd="5" ColSpanLg="5">
                                <DxComboBox SearchFilterCondition="ListSearchFilterCondition.Contains"
                                ListRenderMode=ListRenderMode.Virtual
                                SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                                SearchMode="ListSearchMode.AutoSearch"
                                ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                                ValueFieldName="@nameof(SanPhamDropDown.MaSP)"
                                TextFieldName="@nameof(SanPhamDropDown.TenSPSearch)"
                                SelectedItemChanged="@((SanPhamDropDown sp)=>SanPham_SelectedItemChanged(sp))"
                                Data="@lstsanphamfilter"
                                @bind-Value="@dinhMucVatTuShowcrr.MaSP"
                                CssClass="cw-480" />
                            </DxFormLayoutItem>
                            <DxFormLayoutItem Caption="Chọn kế hoạch" ColSpanXs="12" ColSpanSm="6" ColSpanMd="4" ColSpanLg="4">
                                <CaptionTemplate>
                                    <div class="d-flex text-center">
                                        <DxWaitIndicator Visible="isWait" CssClass="me-1" />
                                        <span style="margin-right:5px;">Chọn kế hoạch</span><span style="color:forestgreen;">
                                            <DxCheckBox Checked="@checkkehoachall" CheckedChanged="@((bool e)=>loadcheckallAsync(e))">Tất cả kế hoạch</DxCheckBox>
                                        </span>
                                    </div>

                                </CaptionTemplate>
                                <Template>
                                    <DxTagBox Data="@customRoot.lstkehoach"
                                    CssClass="cw-480"
                                    ListRenderMode=ListRenderMode.Virtual
                                    SelectedItemsChanged="@((IEnumerable<KeHoachSuDung> e)=>SelectedKeHoachItemChanged(e))"
                                    ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                                    @bind-Values="@kehoachselected">
                                        <TagDisplayTemplate Context="contextdisplay">
                                            @{
                                                KeHoachSuDung donHangSelect = (KeHoachSuDung)contextdisplay.DataItem;
                                            }
                                            <div class="row ms-1 d-flex align-items-center border rounded-2" style="background-color: @donHangSelect.Colorhex;color:@donHangSelect.Colortext">
                                                <div class="col">
                                                    <span>@string.Format("Kế hoạch: {0}", donHangSelect.ID.Substring(0, 5))</span>
                                                    <p style="font-size:10px;margin:0px;">
                                                        <span style="margin-right:5px">@string.Format("Khu vực: {0}", showkhuvuc(donHangSelect.KhuVucKH))</span>
                                                        <span>@string.Format(", Số lượng: {0}", StaticClass.showdouble(donHangSelect.SoLuongSP))</span>
                                                    </p>
                                                </div>
                                                <div class="col">
                                                    <DxButton Click="@contextdisplay.RemoveTagAction"
                                                    @onclick:stopPropagation
                                                    aria-label="Remove Tag"
                                                    IconCssClass="bi bi-x-circle"
                                                    RenderStyle="ButtonRenderStyle.None" RenderStyleMode="ButtonRenderStyleMode.Text">
                                                    </DxButton>
                                                </div>
                                            </div>

                                        </TagDisplayTemplate>
                                        <ItemDisplayTemplate Context="contextitem">
                                            @{
                                                KeHoachSuDung donHangSelect = (KeHoachSuDung)contextitem.DataItem;
                                            }
                                            <div class="col d-flex align-items-center border rounded-2" style="background-color: @donHangSelect.Colorhex;color:@donHangSelect.Colortext">
                                                <div class="ms-1">
                                                    <span>@string.Format("Kế hoạch: {0}", donHangSelect.ID.Substring(0, 5))</span>
                                                    <p style="font-size:10px;margin:0px;">
                                                        <span style="margin-right:15px">@string.Format("Khu vực: {0}", showkhuvuc(donHangSelect.KhuVucKH))</span>
                                                        <span>@string.Format(", Số lượng: {0}", StaticClass.showdouble(donHangSelect.SoLuongSP))</span>
                                                    </p>
                                                </div>
                                            </div>
                                        </ItemDisplayTemplate>
                                    </DxTagBox>
                                </Template>
                            </DxFormLayoutItem>
                        </DxFormLayout>

                    </div>
                </div>

            </Template>
        </DxGridLayoutItem>

        <DxGridLayoutItem Row="1">
            <Template>
                <DxLoadingPanel @bind-Visible="@PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Đang xử lý...">
                    <DxGrid @ref=dxGrid
                    TextWrapEnabled="true"
                    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                    CssClass="my-grid"
                    CustomizeElement="Grid_CustomizeElement"
                    VirtualScrollingEnabled=true

                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                    Data=@customRoot.lstdinhmuc>
                        <ToolbarTemplate>
                            <DxToolbar AdaptivityAutoCollapseItemsToIcons="false" ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" SizeMode="SizeMode.Small">
                                <DxToolbarItem Text="TÌM KIẾM" IconCssClass="bi bi-menu-button-wide" RenderStyle="ButtonRenderStyle.Danger" Click="@(()=>JSRuntime.InvokeVoidAsync("toggleCollapse", string.Format("#{0}",randomdivhide)))">
                                </DxToolbarItem>

                                <DxToolbarItem Text="LƯU" IconCssClass="bi bi-floppy m-1" RenderStyle="ButtonRenderStyle.Primary" Click="@(()=>saveAsync())">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Xuất excel" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>dxGrid.ExportToXlsxAsync("ExporDinhMuc"))">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Chọn cột" BeginGroup="true" Click="@(()=>dxGrid.ShowColumnChooser())" IconCssClass="bi bi-layout-text-window-reverse" />
                            </DxToolbar>
                        </ToolbarTemplate>
                        <Columns>
                            @if(!Ismobile)
                            {
                                <DxGridDataColumn FieldName="chk" Caption=" " Width="50">
                                    <CellDisplayTemplate>
                                        @{
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.DataItem;

                                        }

                                        <DxCheckBox Checked="@dinhMucVatTuShow.chk" CheckedChanged="@((bool e)=>checkedchangedItem(e,dinhMucVatTuShow))"></DxCheckBox>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn FieldName="NhaCungCap" Caption="Mã NCC" Width="110"></DxGridDataColumn>

                                <DxGridDataColumn FieldName="GroupMauSP" Caption="Màu SP" Width="110" GroupIndex="0">
                                    <GroupRowTemplate>
                                        @{
                                            if (context.GroupValue != null)
                                            {
                                                string s = context.GroupValue.ToString();
                                                int rowindex = context.VisibleIndex;

                                                DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                                @if (dinhMucVatTuShow != null)
                                                {

                                                    <div class="row d-flex ms-2">
                                                        <div class="col-auto card p-1" style="background-color:@dinhMucVatTuShow.Colorhex;min-width:250px;">
                                                            <span style="color:@StaticClass.GetContrastColor(dinhMucVatTuShow.Colorhex)">@(string.IsNullOrEmpty(dinhMucVatTuShow.TenMau) ? "Không có màu" : dinhMucVatTuShow.TenMau)</span>

                                                        </div>
                                                    </div>
                                                }
                                            }

                                        }

                                    </GroupRowTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn FieldName="MauSP" Caption="Màu SP" Width="110"></DxGridDataColumn>
                                <DxGridDataColumn FieldName="TenDinhMuc" Name="TenDM" Width="140" Caption="Tên định mức" GroupIndex="1">
                                    <GroupRowTemplate>
                                        @{
                                            // object ob = context.Grid.GetDataItem(context.VisibleIndex);
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);

                                            // <DxCheckBox Checked="@dinhMucVatTuShow.chk" CheckedChanged="@((bool e)=>GetGroupDataItems(e,context.VisibleIndex))">@context.GroupValue</DxCheckBox>
                                            @context.GroupValue
                                            var summaryItems = context.Grid.GetGroupSummaryItems();
                                            if (summaryItems.Any())
                                            {

                                                foreach (var i in summaryItems)
                                                {

                                                    <span style="font-style:italic;color:gray;margin-left:10px">@string.Format("({0} mã hàng)", context.Grid.GetGroupSummaryFormattedValue(i, context.VisibleIndex))</span>
                                                }

                                            }
                                        }
                                    </GroupRowTemplate>
                                </DxGridDataColumn>
                                @if (checkxoancc)
                                {
                                    <DxGridDataColumn FieldName="GroupNhaCungCap" Name="GroupNCC" Caption="Nhà cung cấp" Width="110" GroupIndex="2">
                                        <GroupRowTemplate>
                                            @{
                                                if (context.GroupValue != null)
                                                {
                                                    string s = context.GroupValue.ToString();
                                                    if (!string.IsNullOrEmpty(s))
                                                    {
                                                        DinhMucVatTuShow query = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                                        //var query = lstdata.Where(p => !string.IsNullOrEmpty(p.TenNCC)).FirstOrDefault(p => p.GroupNhaCungCap == s);
                                                        if (query != null)
                                                        {
                                                            if (tendinhmucold != query.TenDinhMuc)
                                                            {
                                                                tendinhmucold = query.TenDinhMuc;
                                                                option = 1;

                                                            }
                                                            else
                                                            {
                                                                option++;
                                                            }
                                                            <span style="font-style:italic;color:orangered">@string.Format("Lựa chọn {0}: {1})", option, query.TenNCC)</span>

                                                        }
                                                        else
                                                        {
                                                            <span>@context.GroupValue</span>
                                                        }

                                                    }

                                                    //context.Grid.ExpandGroupRow(context.VisibleIndex, true);
                                                }
                                            }

                                        </GroupRowTemplate>
                                    </DxGridDataColumn>
                                }
                                <DxGridDataColumn FieldName="MaVatTu" Caption="Mã hàng" Width="120" />
                                <DxGridDataColumn FieldName="TenHang" Caption="Tên hàng" Width="240" />
                                <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="80" />
                                <DxGridDataColumn FieldName="SLQuyDoi" Width="110" Caption="SL/bộ" DisplayFormat="#,0.####" />
                                <DxGridDataColumn FieldName="SLDeNghi" Width="110" Caption="Đề nghị">
                                    <CellDisplayTemplate>
                                        @{
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.DataItem;
                                        }
                                        <DxSpinEdit CssClass="text-danger" ShowSpinButtons=false @bind-Value=@dinhMucVatTuShow.SLDeNghi MinValue="0" MaxValue="@dinhMucVatTuShow.SLConLai" DisplayFormat="#,0.####;-#,0.####;''">
                                        </DxSpinEdit>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn FieldName="CongDoan" Width="140" Caption="Công đoạn" GroupIndex="3">
                                <GroupRowTemplate>
                                    @{

                                    DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                    var summaryItems = context.Grid.GetGroupSummaryItems();
                                    //Hiển thị danh sách các kế hoạch được chọn trong listcongdoan
                                    var querydataview = customRoot.lstkehoachcongdoan.Where(p => p.GroupNhaCungCap == dinhMucVatTuShow.GroupNhaCungCap && p.MauSP == dinhMucVatTuShow.GroupMauSP && p.TenDinhMuc == dinhMucVatTuShow.TenDinhMuc && p.CongDoan == dinhMucVatTuShow.CongDoan && p.KhuVucKH.Equals(dinhMucVatTuShow.KhuVucKH)).FirstOrDefault();


                                }
                                @if(querydataview != null)
                                {
                                    //Tạo luôn keygroup cho nhóm

                                    <div class="d-flex align-items-center">
                                        <DxCheckBox Checked="@querydataview.chk" CheckedChanged="@((bool e)=>GetGroupDataItems(e,context.VisibleIndex,querydataview))">@context.GroupValue</DxCheckBox>

                                        @if (summaryItems.Any())
                                        {

                                            @foreach (var i in summaryItems)
                                            {
                                                var queryi = i;
                                                <span style="font-style:italic;color:gray;margin-left:10px">@string.Format("({0} mã hàng)", context.Grid.GetGroupSummaryFormattedValue(i, context.VisibleIndex))</span>
                                            }
                                        }
                                        @foreach (var it in querydataview.lstkehoachcongdoanitem)
                                        {
                                            <span class="custom-card ms-1" style="background-color:@it.Colorhex;">
                                                <span style="color:@it.Colortext">
                                                    @string.Format("{0}, S.Lượng: ", it.MaKH)
                                                </span>
                                                <DxSpinEdit ShowSpinButtons=false CssClass="text-danger" style="width:100px;" Value="@it.SLDeNghi" MaxValue="@it.SoLuongSP" ValueChanged="@((double e)=>SLCongDoanChanged(e,querydataview,it,dinhMucVatTuShow,context.VisibleIndex))" MinValue="0"></DxSpinEdit>
                                                <span>(bộ)</span>
                                            </span>
                                        }
                                    </div>
                                }

                                </GroupRowTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn FieldName="SLTon" Caption="Tồn kho" Width="100" DisplayFormat="#,0.####;-#,0.####;''" />
                                <DxGridDataColumn FieldName="Err" Caption="Err" Width="180" />
                            }
                            else
                            {
                                <DxGridDataColumn FieldName="chk" Caption=" " Width="50">
                                    <CellDisplayTemplate>
                                        @{
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.DataItem;

                                        }

                                        <DxCheckBox Checked="@dinhMucVatTuShow.chk" CheckedChanged="@((bool e)=>checkedchangedItem(e,dinhMucVatTuShow))"></DxCheckBox>
                                    </CellDisplayTemplate>
                                </DxGridDataColumn>
                               
                                <DxGridDataColumn FieldName="GroupMauSP" Caption="Màu SP" Width="110" GroupIndex="0">
                                    <GroupRowTemplate>
                                        @{
                                            if (context.GroupValue != null)
                                            {
                                                string s = context.GroupValue.ToString();
                                                int rowindex = context.VisibleIndex;

                                                DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                                @if (dinhMucVatTuShow != null)
                                                {

                                                    <div class="row d-flex ms-2">
                                                        <div class="col-auto card p-1" style="background-color:@dinhMucVatTuShow.Colorhex;min-width:250px;">
                                                            <span style="color:@StaticClass.GetContrastColor(dinhMucVatTuShow.Colorhex)">@(string.IsNullOrEmpty(dinhMucVatTuShow.TenMau) ? "Không có màu" : dinhMucVatTuShow.TenMau)</span>

                                                        </div>
                                                    </div>
                                                }
                                            }

                                        }

                                    </GroupRowTemplate>
                                </DxGridDataColumn>
                               
                                <DxGridDataColumn FieldName="TenDinhMuc" Name="TenDM" Width="140" Caption="Tên định mức" GroupIndex="1">
                                    <GroupRowTemplate>
                                        @{
                                            // object ob = context.Grid.GetDataItem(context.VisibleIndex);
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);

                                            // <DxCheckBox Checked="@dinhMucVatTuShow.chk" CheckedChanged="@((bool e)=>GetGroupDataItems(e,context.VisibleIndex))">@context.GroupValue</DxCheckBox>
                                            @context.GroupValue
                                            var summaryItems = context.Grid.GetGroupSummaryItems();
                                            if (summaryItems.Any())
                                            {

                                                foreach (var i in summaryItems)
                                                {

                                                    <span style="font-style:italic;color:gray;margin-left:10px">@string.Format("({0} mã hàng)", context.Grid.GetGroupSummaryFormattedValue(i, context.VisibleIndex))</span>
                                                }

                                            }
                                        }
                                    </GroupRowTemplate>
                                </DxGridDataColumn>
                                @if (checkxoancc)
                                {
                                    <DxGridDataColumn FieldName="GroupNhaCungCap" Name="GroupNCC" Caption="Nhà cung cấp" Width="110" GroupIndex="2">
                                        <GroupRowTemplate>
                                            @{
                                                if (context.GroupValue != null)
                                                {
                                                    string s = context.GroupValue.ToString();
                                                    if (!string.IsNullOrEmpty(s))
                                                    {
                                                        DinhMucVatTuShow query = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                                        //var query = lstdata.Where(p => !string.IsNullOrEmpty(p.TenNCC)).FirstOrDefault(p => p.GroupNhaCungCap == s);
                                                        if (query != null)
                                                        {
                                                            if (tendinhmucold != query.TenDinhMuc)
                                                            {
                                                                tendinhmucold = query.TenDinhMuc;
                                                                option = 1;

                                                            }
                                                            else
                                                            {
                                                                option++;
                                                            }
                                                            <span style="font-style:italic;color:orangered">@string.Format("Lựa chọn {0}: {1})", option, query.TenNCC)</span>

                                                        }
                                                        else
                                                        {
                                                            <span>@context.GroupValue</span>
                                                        }

                                                    }

                                                    //context.Grid.ExpandGroupRow(context.VisibleIndex, true);
                                                }
                                            }

                                        </GroupRowTemplate>
                                    </DxGridDataColumn>
                                }
                               
                                <DxGridDataColumn FieldName="TenHang" Caption="Tên hàng" Width="240">
                                    <CellDisplayTemplate>
                                        @{
                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.DataItem;
                                        }
                                        <div>
                                            <span>@dinhMucVatTuShow.TenHang</span>

                                        </div>
                                        <div class="d-flex justify-content-center">
                                            <DxSpinEdit CssClass="text-danger" ShowSpinButtons=false @bind-Value=@dinhMucVatTuShow.SLDeNghi MinValue="0" MaxValue="@dinhMucVatTuShow.SLConLai" DisplayFormat="#,0.####;-#,0.####;''">
                                            </DxSpinEdit>
                                            <span style="margin-left:10px;">@dinhMucVatTuShow.DVT</span>
                                        </div>
                                     </CellDisplayTemplate>
                                </DxGridDataColumn>
                                <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="80" />
                                <DxGridDataColumn FieldName="CongDoan" Width="140" Caption="Công đoạn" GroupIndex="3">
                                    <GroupRowTemplate>
                                        @{

                                            DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                            var summaryItems = context.Grid.GetGroupSummaryItems();
                                            //Hiển thị danh sách các kế hoạch được chọn trong listcongdoan
                                            var querydataview = customRoot.lstkehoachcongdoan.Where(p => p.GroupNhaCungCap == dinhMucVatTuShow.GroupNhaCungCap && p.MauSP == dinhMucVatTuShow.GroupMauSP && p.TenDinhMuc == dinhMucVatTuShow.TenDinhMuc && p.CongDoan == dinhMucVatTuShow.CongDoan && p.KhuVucKH.Equals(dinhMucVatTuShow.KhuVucKH)).FirstOrDefault();


                                        }
                                        @if (querydataview != null)
                                        {
                                            //Tạo luôn keygroup cho nhóm

                                            <div class="d-flex align-items-center">
                                                <DxCheckBox Checked="@querydataview.chk" CheckedChanged="@((bool e)=>GetGroupDataItems(e,context.VisibleIndex,querydataview))">@context.GroupValue</DxCheckBox>

                                                @if (summaryItems.Any())
                                                {

                                                    @foreach (var i in summaryItems)
                                                    {
                                                        var queryi = i;
                                                        <span style="font-style:italic;color:gray;margin-left:10px">@string.Format("({0} mã hàng)", context.Grid.GetGroupSummaryFormattedValue(i, context.VisibleIndex))</span>
                                                    }
                                                }
                                                @foreach (var it in querydataview.lstkehoachcongdoanitem)
                                                {
                                                    <span class="custom-card ms-1" style="background-color:@it.Colorhex;">
                                                        <span style="color:@it.Colortext">
                                                            @string.Format("{0}, S.Lượng: ", it.MaKH)
                                                        </span>
                                                        <DxSpinEdit ShowSpinButtons=false CssClass="text-danger" style="width:40px;" Value="@it.SLDeNghi" MaxValue="@it.SoLuongSP" ValueChanged="@((double e)=>SLCongDoanChanged(e,querydataview,it,dinhMucVatTuShow,context.VisibleIndex))" MinValue="0"></DxSpinEdit>
                                                        <span>(bộ)</span>
                                                    </span>
                                                }
                                            </div>
                                        }

                                    </GroupRowTemplate>
                                </DxGridDataColumn>
                            }
                        </Columns>

                        <GroupSummary>
                            <DxGridSummaryItem SummaryType="GridSummaryItemType.Count" FieldName="TenDinhMuc" />
                        </GroupSummary>
                    </DxGrid>
                </DxLoadingPanel>
            </Template>
        </DxGridLayoutItem>

    </Items>
</DxGridLayout>
@code {
    [Parameter]
    public KeHoachMuaHang_Show keHoachMuaHang_Showcrr{ get; set; }

    [Inject] IJSRuntime JSRuntime { get; set; }
    [Inject] BrowserService browserService { get; set; }

    List<DataDropDownList> lstmamau { get; set; }
    DinhMucVatTuShow dinhMucVatTuShowcrr { get; set; } = new DinhMucVatTuShow();
    bool Ismobile { get; set; } = false;
    bool checkkehoachall { get; set; } = false;
    string heightgrid = "500px";
    string tendinhmucold { get; set; } = "";
    int option { get; set; } = 0;
    List<DataDropDownList> lstnoigiaonhan { get; set; }
    List<DataDropDownList> lstKhachHang { get; set; }
    bool PanelVisible { get; set; } = false;
    DxToast toastTextInput { get; set; }

    bool isWait { get; set; } = false;
    List<SanPhamDropDown> lstsanpham { get; set; }

    List<SanPhamDropDown> lstsanphamfilter { get; set; }
    IEnumerable<KeHoachSuDung> kehoachselected { get; set; }
    List<KeHoachSuDung> kehoachselectedprev { get; set; } = new List<KeHoachSuDung>();

    public DxGrid dxGrid { get; set; }

    private string randomdivhide { get; set; } = string.Format("id{0}", StaticClass.Randomstring(10));
    public string showkhuvuc(string khuvuc)
    {
        if (khuvuc == "KV2DH")
            return "Lắp ráp";
        if (khuvuc == "KV3")
            return "Nhúng/Sơn";
        return khuvuc;
    }
    void Grid_CustomizeElement(GridCustomizeElementEventArgs e)
    {
        if (e.ElementType == GridElementType.DataRow)
        {
            if (e.Grid.GetRowValue(e.VisibleIndex, "Err") != null && e.Grid.GetRowValue(e.VisibleIndex, "Err") != DBNull.Value)
            {
                //Console.WriteLine(e.Grid.GetRowValue(e.VisibleIndex, "Err").ToString());
                if (!string.IsNullOrEmpty(e.Grid.GetRowValue(e.VisibleIndex, "Err").ToString()))
                    e.CssClass = "highlighted-item";
            }

        }
        if (e.ElementType == GridElementType.GroupRow)
        {
            if (e.Column.Name == "TenDM")
            {
                e.Style = "background-color:lightgray";
                option = 0;//Reset lựa chọn theo nhà cung cấp lại;
            }
            if (e.Column.Name == "GroupNCC")
            {

                object ob = e.Grid.GetRowValue(e.VisibleIndex, "GroupNhaCungCap");


                if (ob == null)
                {
                    e.Style = "display:none;";

                }
                else
                {
                    if (ob.ToString() == "")
                    {
                        e.Style = "display:none;";
                    }

                }
            }

        }

    }
}