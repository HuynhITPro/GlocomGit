@using BlazorBootstrap
@using DevExpress.Blazor;
@using NFCWebBlazor.App_ClassDefine;
@using System.Data
@using NFCWebBlazor.App_NguyenVatLieu.App_NhapXuat
@using static NFCWebBlazor.App_NguyenVatLieu.App_ThanhToan.Page_ThanhToanMaster
@using static NFCWebBlazor.App_NguyenVatLieu.App_NhapXuat.Page_NhapXuat_Master
@inject Model.ThemeColor themcolor;
<style>
    .my-grid {
    height: @heightgrid;
    }

    .highRed {
    color: red;
    font-weight: bold
    }

    .highGreen {
    color: Green;
    font-weight: bold
    }

    .gridcss {
    max-height: @heightgrid;
    }


    .highlighted-item > td {
    background-color: yellow;
    color: #0070ff;
    font-weight: bold;
    }

    #griddetailnhapkhoms .dxbl-grid-header-row {
    display: contents;
    }

    #customGridnotheader .dxbl-grid-header-row {
    display: none;
    }

    #griddetailnhapkho .dxbl-grid-header-row {
    display: contents;
    color: green;
    }

</style>

<NFCWebBlazor.App_Admin.DialogMsg @ref="@dialogMsg"></NFCWebBlazor.App_Admin.DialogMsg>

<NFCWebBlazor.App_ClassDefine.DialogWindow @ref=@dxPopup>
    <BodyContentTemplate>
        @renderFragment
    </BodyContentTemplate>
</NFCWebBlazor.App_ClassDefine.DialogWindow>

<NFCWebBlazor.App_ClassDefine.DialogWindow @ref=@dxPopupDetail>
    <BodyContentTemplate>
        @renderFragmentdetail
    </BodyContentTemplate>
</NFCWebBlazor.App_ClassDefine.DialogWindow>

<DxFlyout @ref=dxFlyoutchucnang
PositionTarget="@idflychucnang"
@bind-IsOpen=IsOpenfly
RestrictionTarget="#Navigation-Flyout-Customization"
AnimationType=FlyoutAnimationType.Fade
PreventCloseOnPositionTargetClick="true"
Width="320px"
Position=@(FlyoutPosition.BottomStart | FlyoutPosition.TopStart)>
    <BodyTextTemplate>

        <div class="container">
            <div class="row gap-1">
            </div>


        </div>
    </BodyTextTemplate>

</DxFlyout>
<DxGridLayout CssClass="w-100 ch-480">

    <Rows>
        <DxGridLayoutRow Height="Auto" />
        <DxGridLayoutRow />
    </Rows>

    <Items>

        <DxGridLayoutItem Row="0" Visible="@visibleSearch">
            <Template>

                <div id="@randomdivhide" class="p-2 mb-2 bg-white border  rounded-2 rounded-top-0 collapse show">

                    <DxFormLayout CssClass="w-100 mt-3" CaptionPosition="CaptionPosition.Vertical">
                        <DxFormLayoutItem Caption="Chọn kho" ColSpanXs="12" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">

                            <DxComboBox Data=@lstkhonvl
                            SearchFilterCondition="ListSearchFilterCondition.Contains"
                            ListRenderMode=ListRenderMode.Virtual
                            SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                            SearchMode="ListSearchMode.AutoSearch"
                            ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                            TextFieldName="@nameof(DataDropDownList.FullName)"
                            ValueFieldName="@nameof(DataDropDownList.Name)"
                            @bind-Value="@nvlNhapXuatKhoShowcrr.MaKho" />

                        </DxFormLayoutItem>

                        <DxFormLayoutItem Caption="Nhà cung cấp/ Nơi giao" ColSpanXs="12" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">
                            <NFCWebBlazor.App_ClassDefine.ComboboxFilteredString CssClass="cw-480"
                            SearchFilterCondition="ListSearchFilterCondition.Contains"
                            ListRenderMode=ListRenderMode.Virtual
                            SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                            SearchMode="ListSearchMode.AutoSearch"
                            TextFieldName="@nameof(DataDropDownList.FullName)"
                            ValueFieldName="@nameof(DataDropDownList.Name)"
                            @bind-Text="@nvlNhapXuatKhoShowcrr.TenGN"
                            Data="@lstnoigiaonhan"
                            ClearButtonDisplayMode="DataEditorClearButtonDisplayMode.Auto"
                            @bind-Value="@nvlNhapXuatKhoShowcrr.MaGN" />

                        </DxFormLayoutItem>
                        <DxFormLayoutItem Caption="Tình trạng" ColSpanXs="6" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">
                            <DxComboBox Data=@lsttinhtrangtinhct 
                            SearchFilterCondition="ListSearchFilterCondition.Contains"
                            ListRenderMode=ListRenderMode.Virtual
                            TextFieldName="@nameof(DataDropDownList.FullName)"
                            SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                            SearchMode="ListSearchMode.AutoSearch"
                            ValueFieldName="@nameof(DataDropDownList.Name)"
                            ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                            @bind-Value="@nvlNhapXuatKhoShowcrr.ThanhToan"
                            CssClass="cw-480" />

                        </DxFormLayoutItem>
                        <DxFormLayoutItem Caption="Serial chứng từ" ColSpanXs="6" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">

                            <DxSpinEdit @bind-Value=@sochungtu ShowSpinButtons="false" />

                        </DxFormLayoutItem>
                        <DxFormLayoutItem Caption="Lý Do" ColSpanXs="6" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">
                            <DxComboBox Data="@lstlydo" SearchFilterCondition="ListSearchFilterCondition.Contains"
                            ListRenderMode=ListRenderMode.Virtual
                            SearchTextParseMode=ListSearchTextParseMode.GroupWordsByAnd
                            SearchMode="ListSearchMode.AutoSearch"
                            ValueFieldName="@nameof(DataDropDownList.Name)"
                            ClearButtonDisplayMode=DataEditorClearButtonDisplayMode.Auto
                            TextFieldName="@nameof(DataDropDownList.FullName)"
                            @bind-Value="@nvlNhapXuatKhoShowcrr.LyDo"
                            CssClass="cw-480" />

                        </DxFormLayoutItem>

                        <DxFormLayoutItem Caption="Từ ngày" BeginRow="true" ColSpanXs="6" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">

                            <DxDateEdit @bind-Date="@dtpbegin" Mask="@DateTimeMask.ShortDate" DisplayFormat="dd-MM-yy" />

                        </DxFormLayoutItem>
                        <DxFormLayoutItem Caption="Đến" ColSpanXs="6" ColSpanSm="6" ColSpanMd="6" ColSpanLg="6">

                            <DxDateEdit @bind-Date="@dtpend" Mask="@DateTimeMask.ShortDate" DisplayFormat="dd-MM-yy" />

                        </DxFormLayoutItem>


                    </DxFormLayout>

                </div>
            </Template>
        </DxGridLayoutItem>

        <DxGridLayoutItem Row="1">
            <Template>
                <DxLoadingPanel @bind-Visible="@PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Đang xử lý...">
                    <DxGrid @ref=dxGrid
                    TextWrapEnabled="false"
                    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                    AutoCollapseDetailRow="true"
                    CssClass="my-grid"
                    VirtualScrollingEnabled=true
                    id="@idgrid"
                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                    Data=@lstNhapXuatKhoSearchShow
                    AutoExpandAllGroupRows=false>
                        <ToolbarTemplate>
                            <DxToolbar AdaptivityAutoCollapseItemsToIcons="false" ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" SizeMode="SizeMode.Small">
                                <DxToolbarItem Text="TÌM KIẾM" IconCssClass="bi bi-menu-button-wide" RenderStyle="ButtonRenderStyle.Danger" Click="@(()=>JSRuntime.InvokeVoidAsync(CallNameJson.toggleCollapse.ToString(),string.Format("#{0}",randomdivhide)))">
                                </DxToolbarItem>
                                <DxToolbarItem Text="XEM" IconCssClass="bi bi-search" RenderStyle="ButtonRenderStyle.Primary" Click="@search">
                                </DxToolbarItem>
                                <DxToolbarItem Text="LƯU" Visible="@(SaveVisible)" IconCssClass="bi bi-floppy" RenderStyle="ButtonRenderStyle.Primary" Click="@saveAsync">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Xuất excel" Visible="@(!Ismobile)" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>dxGrid.ExportToXlsxAsync("ExporChungTu"))">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Chọn cột" BeginGroup="true" Visible="@(!Ismobile)" Click="@(()=>dxGrid.ShowColumnChooser())" IconCssClass="bi bi-layout-text-window-reverse" />
                            </DxToolbar>
                        </ToolbarTemplate>
                        <Columns>

                            <DxGridDataColumn FieldName="chk" Visible="@SaveVisible" Caption="Chọn" Width="110" AllowSort="false">

                                <CellDisplayTemplate>
                                    @{
                                        NvlNhapXuatKhoShow nvlInPhieuShow = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    @if (nvlInPhieuShow.ThanhToan == "Chưa làm hồ sơ thanh toán")
                                    {
                                        <DxCheckBox @bind-Checked="@nvlInPhieuShow.CheckThanhToan"
                                        Alignment="CheckBoxContentAlignment.Center"
                                        LabelPosition="LabelPosition.Right">
                                        </DxCheckBox>
                                    }
                                </CellDisplayTemplate>
                            </DxGridDataColumn>
                           @*  <DxGridDataColumn Visible="@visibleadd" FieldName="Serial" DisplayFormat="#" Caption=" " Width="110">
                                <CellDisplayTemplate>
                                    @{
                                        NvlNhapXuatKhoShow nvlnhapxuatitem = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    <span>
                                        <a href="#" class="link-danger link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover"
                                        id=@idelement(nvlnhapxuatitem) @onclick="@(()=>ShowFlyout(nvlnhapxuatitem))"><i class="bi bi-list-stars me-1"></i>Chức năng</a>
                                    </span>
                                </CellDisplayTemplate>
                            </DxGridDataColumn> *@
                            <DxGridDataColumn FieldName="Serial" DisplayFormat="#" Caption="Serial CT" Width="120">
                                <CellDisplayTemplate>
                                    @{
                                        NvlNhapXuatKhoShow nvlnhapxuatitem = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    @if (nvlnhapxuatitem != null)
                                    {
                                        <div>
                                            @if (nvlnhapxuatitem.VisibleHoadon)
                                            {
                                                <img src="@nvlnhapxuatitem.PathFileHoaDon" style="margin-right:10px;width: auto; height: 24px;">
                                            }
                                            <span>@nvlnhapxuatitem.Serial</span>
                                        </div>
                                    }

                                </CellDisplayTemplate>
                            </DxGridDataColumn>
                            <DxGridDataColumn FieldName="NguoiXacNhan" Caption="Xác nhận bởi" Width="140">

                            </DxGridDataColumn>
                            <DxGridDataColumn FieldName="MaCT" Caption="Chứng từ" Width="120"></DxGridDataColumn>
                            <DxGridDataColumn FieldName="MaCTTT" Caption="Số HĐ" Width="120"/>
                            <DxGridDataColumn FieldName="ThanhTien" Caption="Thành tiền" Width="120" />
                            <DxGridDataColumn FieldName="TinhTrang" Caption="Kiểm hàng" Width="120" >
                                <CellDisplayTemplate>
                                    @{
                                        NvlNhapXuatKhoShow nvlnhapxuatitem = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    <div>
                                        <img src="@nvlnhapxuatitem.PathImgTinhTrang" style="width: auto; height: 18px;margin-right:10px">
                                        <span class="text-primary" style="font-size:0.7rem;">@nvlnhapxuatitem.TinhTrang</span>
                                    </div>
                                </CellDisplayTemplate>
                            </DxGridDataColumn>
                            
                            <DxGridDataColumn FieldName="TenGN" Caption=@tengiaonhanheader Width="200">
                                <GroupRowTemplate>
                                    @context.GroupValue
                                </GroupRowTemplate>
                            </DxGridDataColumn>
                            <DxGridDataColumn FieldName="LyDo" Caption="Lý do" Width="170" />
                            <DxGridDataColumn FieldName="TenKho" Caption="Kho" Width="140" />
                            <DxGridDataColumn FieldName="DienGiai" Caption="Diễn giải" Width="170" />
                            <DxGridDataColumn FieldName="Ngay" Caption="Ngày" Width="120" />

                            <DxGridDataColumn FieldName="UserInsert" Caption=" UserInsert" />

                        </Columns>
                        <DetailRowTemplate>
                            <DxTabs>
                                <DxTabPage Text="Chi tiết" TabIconCssClass="bi bi-list-ol">
                                    @{
                                        NvlNhapXuatKhoShow nvlNhapXuatKhoShow = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    <View_NhapXuatItemDetail nvlNhapXuatKhoShowcrr="@nvlNhapXuatKhoShow"></View_NhapXuatItemDetail>
                                </DxTabPage>
                                <DxTabPage Text="File hồ sơ" TabIconCssClass="bi bi-file-earmark-code">
                                    @{
                                        NvlNhapXuatKhoShow nvlNhapXuatKhoShow = (NvlNhapXuatKhoShow)context.DataItem;
                                    }
                                    <NFCWebBlazor.App_Admin.Urc_FileHoSoGroup serialLink="@nvlNhapXuatKhoShow.Serial" tableName="NvlNhapXuat" lstdata="@nvlNhapXuatKhoShow.lstfilehoso" GotoMainForm="@nvlNhapXuatKhoShow.setlstfilehoso"></NFCWebBlazor.App_Admin.Urc_FileHoSoGroup>

                                </DxTabPage>

                            </DxTabs>

                        </DetailRowTemplate>
                    </DxGrid>
                </DxLoadingPanel>
            </Template>
        </DxGridLayoutItem>

    </Items>
</DxGridLayout>
@code {


    [Inject] IJSRuntime JSRuntime { get; set; }
    [Inject] BrowserService browserService { get; set; }
    

    [Parameter]
    public  bool visibleSearch { get; set; } = true;
    [Parameter]
    public NvlNhapXuatKhoShow nvlNhapXuatKhoShowcrr { get; set; }
    [Parameter]
    public NvlThanhToanShow nvlThanhToanShowcrr{ get; set; }
    DialogWindow dxPopup;
    List<DataDropDownList> lstnoigiaonhan { get; set; }
    RenderFragment renderFragment;
    RenderFragment renderFragmentdetail { get; set; }
    List<DataDropDownList> lsttinhtrangtinhct { get; set; }
    DialogMsg dialogMsg;
    int? sochungtu { get; set; }

    DialogWindow dxPopupDetail { get; set; }
    private string randomdivhide { get; set; } = string.Format("id{0}", StaticClass.Randomstring(10));//ID của CSS nên bắt đầu bằng chữ, vì nếu bat đầu bằng số dễ bị hẹo lắm
   
    string idgrid = "griddetailnhapkhoms";
    bool showallgroup { get; set; } = false;
    bool IsOpenfly = false;
    List<DataDropDownList> lsttinhtrang { get; set; }
    bool SaveVisible { get; set; }=false;
   
    //bool IsOpenfly = true;
    DxFlyout dxFlyoutchucnang { get; set; }
    public string idflychucnang { get; set; }
    public string random { get; set; }
    string heightgrid = "500px";
    DateTime? dtpbegin { get; set; } = DateTime.Now.AddMonths(-4);
    DateTime? dtpend { get; set; } = DateTime.Now;
    string tengiaonhanheader = "Tên giao nhận";
    bool isclick = false;
    bool checkall { get; set; } = false;

    bool PanelVisible { get; set; } = false;
    bool VisibleThemChungTu { get; set; } = true;
    bool VisibleHangNo { get; set; } = false;
    ComboboxFilteredTable txtnhamay { get; set; }
    DataDropDownList nhamayselected { get; set; }
    List<DataDropDownList> lstlydo { get; set; }
   
    List<DataDropDownList> lstkhonvl { get; set; }

    public DxGrid dxGrid { get; set; }

    public async void ClosePopupWhenBack()
    {
        await JSRuntime.InvokeVoidAsync("PopupHelper.unregisterBackEvent");
        await dxPopup.CloseAsync();
    }

    List<InitDxGridDataColumn> lstcolumn = new List<InitDxGridDataColumn>();


    private bool CheckChungTuNhap(NvlNhapXuatKhoShow nvlNhapXuatKhoShow)
    {
        if (nvlNhapXuatKhoShow.STTCT >= 0)
        {
            return true;
        }

        return false;
    }
    public string idelement(NvlNhapXuatKhoShow nvlNhapXuatKhoShow)
    {
        if (nvlNhapXuatKhoShow == null)
            return "";
        int serial = nvlNhapXuatKhoShow.Serial;
        if (nvlNhapXuatKhoShow == null)
            string.Format("flychucnang_{0}_{1}", random, serial);
        if (serial == null)
            string.Format("flychucnang_{0}_{1}", random, serial);
        if (random == null)
        {
            random = prs.RandomString(9);
        }
        return string.Format("flychucnang_{0}_{1}", random, serial);
    }
    // Hàm xử lý sự kiện click của nút


    private string showdate(DateTime? dt)
    {
        if (dt == null)
            return "";
        return dt.Value.ToString("dd-MM-yy");
    }
    private void expandorcollapse(int i)
    {
        if (dxGrid.IsDetailRowExpanded(i))
            dxGrid.CollapseDetailRow(i);
        else
            dxGrid.ExpandDetailRow(i);
    }

}