@using BlazorBootstrap
@using DevExpress.Blazor;
@using NFCWebBlazor.App_ClassDefine;
@using System.Data
@using static NFCWebBlazor.App_NguyenVatLieu.App_KeHoachDeNghi.Page_KeHoachMuaHangMaster
@using static NFCWebBlazor.App_NguyenVatLieu.App_DonDatHang.Page_KeHoachMuaHang_AddKeHoachSP
@using static NFCWebBlazor.App_NguyenVatLieu.App_NhapXuat.Page_NhapXuat_Master
<style>
    .my-grid {
        height: @heightgrid;
    }


    .highlighted-item > td {
        background-color: navajowhite;
        color: #0070ff;
    }

    .highGreen {
        background-color: lightskyblue;
    }

</style>
<NFCWebBlazor.App_ClassDefine.DialogWindow @ref=@dxPopup>
    <BodyContentTemplate>
        @renderFragment
    </BodyContentTemplate>
</NFCWebBlazor.App_ClassDefine.DialogWindow>
<DxGridLayout CssClass="w-100 ch-480">
    <Rows>
        <DxGridLayoutRow />
    </Rows>
    <Items>
        <DxGridLayoutItem>
            <Template>
                <DxTabs ActiveTabIndex="@activeindex" RenderMode="TabsRenderMode.AllTabs">
                    <DxTabPage Text="Chi tiết" TabIconCssClass="bi bi-list-ol" CssClass="w-100">
                        <div style="position: relative;justify-content: center; align-items: center;">
                            <div style="position: absolute;display: flex;width: 100%;">
                                <DxGrid @ref=dxGrid
                                        TextWrapEnabled="false"
                                        ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                                        AutoCollapseDetailRow="true"
                                        CssClass="my-grid"
                                        HighlightRowOnHover="true"
                                        VirtualScrollingEnabled=true
                                        FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                        Data=@dtsource
                                        ShowFilterRow="true"
                                        AutoExpandAllGroupRows=true>
                                    <ToolbarTemplate>
                                        <DxToolbar AdaptivityAutoCollapseItemsToIcons="false" ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" SizeMode="SizeMode.Small">
                                            <DxToolbarItem Text="TÌM KIẾM" IconCssClass="bi bi-menu-button-wide"  RenderStyle="ButtonRenderStyle.Danger" Click="@(()=>_jsRuntime.InvokeVoidAsync("toggleCollapse", string.Format("#{0}",randomdivhide)))"></DxToolbarItem>
                                            <DxToolbarItem Text="Chọn kế hoạch" Visible="(keHoachMuaHang_Showcrr==null)" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@ShowSanPhamAsync"></DxToolbarItem>
                                            <DxToolbarItem Text="Xuất excel" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>exporttoexcel())"></DxToolbarItem>
                                            <DxToolbarItem Text="Nạp lại từ excel" Visible="(keHoachMuaHang_Showcrr!=null)" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Primary" Click="@(()=>NapTuExcel())"></DxToolbarItem>
                                            <DxToolbarItem Text="Gộp lại theo mã hàng" IconCssClass="bi bi-file-spreadsheet" RenderStyle="ButtonRenderStyle.Danger" Click="@GopTheoMaHang" />
                                            <DxToolbarItem Text="Lưu" Visible="@(CheckQuyen&&(keHoachMuaHang_Showcrr!=null))" RenderStyle="ButtonRenderStyle.Success" BeginGroup="true" Click="@saveAsync" IconCssClass="bi bi-floppy" />
                                        </DxToolbar>
                                    </ToolbarTemplate>
                                    <Columns>
                                        <DxGridDataColumn FieldName="KhachHang" Caption="Khách hàng" Width="110" Visible="false" />
                                        <DxGridDataColumn FieldName="KeyGroup" Caption="KeyGroup" Width="110" Visible=false />
                                        <DxGridDataColumn FieldName="Total_TyLeThieu" Caption="Tỷ lệ (Không bao gồm ĐH nợ)" Width="120">
                                            <CellDisplayTemplate>
                                                @{
                                                    DataRowView dataRow = (DataRowView)context.DataItem;
                                                }
                                                <ProgressBarDf value=@(StaticClass.ConvertNumberCultureInfo(dataRow.Row["Total_TyLeThieu"]))></ProgressBarDf>
                                            </CellDisplayTemplate>
                                        </DxGridDataColumn>
                                        <DxGridDataColumn FieldName="Total_TyLe" Caption="Tỷ lệ (Đã bao gồm ĐH nợ)" Width="120">
                                            <CellDisplayTemplate>
                                                @{
                                                    DataRowView dataRow = (DataRowView)context.DataItem;
                                                }
                                                <ProgressBarDf value=@(StaticClass.ConvertNumberCultureInfo(dataRow.Row["Total_TyLe"]))></ProgressBarDf>
                                            </CellDisplayTemplate>
                                        </DxGridDataColumn>
                                        <DxGridDataColumn FieldName="MaVatTu" Caption="Mã hàng" Width="110" />
                                        <DxGridDataColumn FieldName="MaPDOC" Caption="Mã PDOC" Width="110" />
                                        <DxGridDataColumn FieldName="MaSP" Caption="Mã SP" Width="110" />
                                        <DxGridDataColumn FieldName="TenSP" Caption="Tên SP" Width="180" Visible="true" />
                                        <DxGridDataColumn FieldName="TenSP" Width="180" Caption="Tên SP" GroupIndex="0">
                                            <GroupRowTemplate>
                                                @{
                                                    //DinhMucVatTuShow dinhMucVatTuShow = (DinhMucVatTuShow)context.Grid.GetDataItem(context.VisibleIndex);
                                                    DataRowView dataRow = (DataRowView)context.Grid.GetDataItem(context.VisibleIndex);
                                                    double slsp = 0;
                                                    string MaSP = dataRow.Row.Field<string>("MaSP");
                                                    if (lstkehoachthangselect != null)
                                                    {
                                                        var querysp = lstkehoachthangselect.Where(p => p.MaSP == MaSP).FirstOrDefault();

                                                        if (querysp != null)
                                                            slsp = querysp.SLPhaiDat;
                                                    }

                                                }
                                                <span style="font-weight:bold;color:text-danger;font-size:1.2rem">@context.GroupValue</span>
                                                <span style="color:orangered;margin-left:10px;">@string.Format("{0} bộ", StaticClass.showdouble(slsp))</span>
                                            </GroupRowTemplate>
                                        </DxGridDataColumn>
                                        <DxGridDataColumn FieldName="TenNCC" Visible="false" Caption="Tên NCC" Width="120" />
                                        <DxGridDataColumn FieldName="TenNhom" Caption="Tên nhóm" Width="110" />
                                        <DxGridDataColumn FieldName="CongDoan" Caption="Công đoạn sử dụng" Width="180" />
                                        <DxGridDataColumn FieldName="TenMau" Caption="Tên màu" Width="110">
                                            <CellDisplayTemplate>
                                                @{
                                                    //object ob=context.DataItem;
                                                    DataRowView dataRow = (DataRowView)context.DataItem;
                                                }
                                                <div class="row d-flex ms-2">
                                                    <div class="col-auto card p-1" style="background-color:@StaticClass.UIntToHtmlColor(uintparse(dataRow["Color"]));min-width:90px;">
                                                        <span>@(dataRow.Row.Field<string>("TenMau"))</span>
                                                    </div>
                                                </div>
                                            </CellDisplayTemplate>
                                        </DxGridDataColumn>

                                        <DxGridDataColumn FieldName="TenHang" FixedPosition="GridColumnFixedPosition.Left" Caption="Tên hàng" Width="240" />
                                        <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="70" />

                                        <DxGridDataColumn FieldName="SLQuyDoi" Caption="SL/bộ" Width="90" DisplayFormat="#,0.######;-#,0.###;#" />


                                        <DxGridDataColumn FieldName="Total_KeHoach" Caption="Nhu cầu" Width="120" DisplayFormat="#,0.####;-#,0.##;#" />
                                        <DxGridBandColumn Caption="@tonkhotitle">
                                            <Columns>

                                                <DxGridDataColumn FieldName="SLTonDongVi" Caption="Tồn đóng vỉ" Width="100" DisplayFormat="#,0.####;-#,0.##;#" />
                                                <DxGridDataColumn FieldName="Total_TonKho" Caption="Tồn kho" Width="110" DisplayFormat="#,0.####;-#,0.##;#" />

                                            </Columns>
                                        </DxGridBandColumn>
                                        <DxGridDataColumn FieldName="Total_SLNhap" Caption=@nhapkhotitle Width="220" DisplayFormat="#,0.####;-#,0.##;#" />
                                        <DxGridDataColumn FieldName="Total_TonMB" Caption="Tồn mặt bằng" Width="120" DisplayFormat="#,0;-#,0.##;#" />
                                        <DxGridDataColumn FieldName="Total_DHConNo" Caption="Đơn hàng chưa về" Width="200" DisplayFormat="#,0;-#,0.##;#" />


                                        <DxGridDataColumn FieldName="Total_SLDeNghi" Caption="Phải đặt" Width="120" DisplayFormat="#,0;-#,0.##;#">
                                            <CellDisplayTemplate>
                                                @{
                                                    DataRowView dataRow = (DataRowView)context.DataItem;
                                                }
                                                <DxSpinEdit ShowSpinButtons=false Value="@(dataRow.Row.Field<double>("Total_SLDeNghi"))" ValueChanged="@((double e)=>valuesoluongchanged(e,dataRow))" DisplayFormat="#,0.###"></DxSpinEdit>
                                            </CellDisplayTemplate>

                                        </DxGridDataColumn>
                                        <DxGridDataColumn FieldName="TenNCCShow" Caption="NCC" Width="350" />


                                    </Columns>

                                </DxGrid>
                            </div>
                            <div style="position: absolute;display:@(PanelVisible ? "flex" : "none");width:100%;height:@heightgrid;background-color: rgba(0, 0, 0, 0.3);justify-content: center; align-items: center;">
                                <CascadingValue Name="visibleTimer" Value="@PanelVisible">
                                    <LoadingPanel></LoadingPanel>
                                </CascadingValue>
                            </div>
                        </div>
                    </DxTabPage>
                    <DxTabPage Text="Tổng hợp" TabIconCssClass="bi bi-file-earmark-code" CssClass="w-100">
                        <div style="position: relative;justify-content: center; align-items: center;">
                            <div style="position: absolute;display: flex;width: 100%;">
                                <DxGrid @ref=dxGridtotal
                                        TextWrapEnabled="false"
                                        ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                                        AutoCollapseDetailRow="true"
                                        CssClass="my-grid"
                                        HighlightRowOnHover="true"
                                        VirtualScrollingEnabled=true
                                        FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                                        Data=@dtsourcegr
                                        ShowFilterRow="true"
                                        AutoExpandAllGroupRows=true>
                                    <ToolbarTemplate>
                                        <DxToolbar AdaptivityAutoCollapseItemsToIcons="false" ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" SizeMode="SizeMode.Small">

                                            <DxToolbarItem Text="Xuất excel" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>dxGridtotal.ExportToXlsxAsync("ExporBangKe"))">
                                            </DxToolbarItem>

                                        </DxToolbar>
                                    </ToolbarTemplate>
                                    <Columns>

                                        <DxGridDataColumn FieldName="TenHang" FixedPosition="GridColumnFixedPosition.Left" Caption="Tên hàng" Width="240" />
                                        <DxGridDataColumn FieldName="TenNhom" Caption="Nhóm hàng" Width="130" />
                                        <DxGridDataColumn FieldName="MaHang" Caption="Mã hàng" Width="120" />
                                        <DxGridDataColumn FieldName="MaPDOC" Caption="Mã PDOC" Width="110" />
                                        <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="80" />

                                        <DxGridDataColumn FieldName="DonGia" Caption="Đơn giá" Width="120" DisplayFormat="#,0.#" />
                                        <DxGridBandColumn Caption="TỔNG">
                                            <Columns>
                                                <DxGridDataColumn FieldName="Total_KeHoach" Caption="Nhu cầu" Width="120" DisplayFormat="#,0;-#,0.##;#" />

                                                <DxGridDataColumn FieldName="Total_TonKho" Caption="@tonkhotitle" Width="200" DisplayFormat="#,0;-#,0.##;#" />

                                                <DxGridDataColumn FieldName="Total_SLNhap" Caption=@nhapkhotitle Width="200" DisplayFormat="#,0;-#,0.##;#" />
                                                <DxGridDataColumn FieldName="Total_TyLeThieu" Caption="Tỷ lệ (Không bao gồm ĐH nợ)" Width="120">
                                                    <CellDisplayTemplate>
                                                        @{
                                                            DataRowView dataRow = (DataRowView)context.DataItem;
                                                        }
                                                        <ProgressBarDf value=@(StaticClass.ConvertNumberCultureInfo(dataRow.Row["Total_TyLeThieu"]))></ProgressBarDf>
                                                    </CellDisplayTemplate>
                                                </DxGridDataColumn>
                                                <DxGridDataColumn FieldName="Total_TyLe" Caption="Tỷ lệ (Đã bao gồm ĐH nợ)" Width="120">
                                                    <CellDisplayTemplate>
                                                        @{
                                                            DataRowView dataRow = (DataRowView)context.DataItem;
                                                        }
                                                        <ProgressBarDf value=@(StaticClass.ConvertNumberCultureInfo(dataRow.Row["Total_TyLe"]))></ProgressBarDf>
                                                    </CellDisplayTemplate>
                                                </DxGridDataColumn>


                                                <DxGridDataColumn FieldName="Total_TonMB" Caption="Tồn mặt bằng" Width="110" DisplayFormat="#,0;-#,0.##;#" />
                                                <DxGridDataColumn FieldName="Total_DHConNo" Caption="Đơn hàng chưa về" Width="190" DisplayFormat="#,0;-#,0.##;#" />
                                                <DxGridDataColumn FieldName="Total_SLDeNghi" Caption="Phải đặt" Width="110" DisplayFormat="#,0;-#,0.##;#" />
                                                <DxGridDataColumn FieldName="TenNCCShow" Caption="NCC" Width="350" />
                                            </Columns>
                                        </DxGridBandColumn>

                                        @renderFragmentcolumntotal
                                    </Columns>

                                </DxGrid>
                            </div>
                            <div style="position: absolute;display:@(PanelVisible ? "flex" : "none");width:100%;height:@heightgrid;background-color: rgba(0, 0, 0, 0.3);justify-content: center; align-items: center;">
                                <CascadingValue Name="visibleTimer" Value="@PanelVisible">
                                    <LoadingPanel></LoadingPanel>
                                </CascadingValue>
                            </div>
                        </div>
                    </DxTabPage>

                </DxTabs>

            </Template>
        </DxGridLayoutItem>

    </Items>
</DxGridLayout>
@code {

    [Inject] BrowserService browserService { get; set; }
    NvlNhapXuatItemShow nvlNhapXuatItemShowcrr { get; set; } = new NvlNhapXuatItemShow();
    [Parameter]
    public KeHoachMuaHang_Show keHoachMuaHang_Showcrr { get; set; }
    List<DataDropDownList> lstnoigiaonhan { get; set; }
    public List<KeHoachThang_Show> lstkehoachthangselect = new List<KeHoachThang_Show>();
    public List<KeHoachThang_Show> lstkehoachthangsaveitem = new List<KeHoachThang_Show>();
    List<TonKhoList> lstgroup { get; set; } = new List<TonKhoList>();
    DialogWindow? dxPopup { get; set; }
    int activeindex = 0;
    string tonkhotitle = "";
    string nhapkhotitle = "";
    string xuatkhotitle = "";
    string? tenbaocao { get; set; } = "Tổng hợp theo giao nhận";
    DataTable dtsource { get; set; } = new DataTable();
    DataTable dtsourcegr { get; set; } = new DataTable();
    string heightgrid = "500px";
    DateTime? dtpbegin { get; set; } = DateTime.Now;
    DateTime? dtpend { get; set; } = DateTime.Now;
    bool isclick = false;
    bool PanelVisible { get; set; } = false;
    string? loaibaocao { get; set; } = "Ngay";
    ComboboxFilteredTable txtnhamay { get; set; }
    private string randomdivhide { get; set; } = string.Format("id{0}", StaticClass.Randomstring(10));//ID của CSS nên bắt đầu bằng chữ, vì nếu bat đầu bằng số dễ bị hẹo lắm
    List<DataDropDownList> lstlydo { get; set; }
    RenderFragment renderFragment { get; set; }
    List<DataDropDownList> lstkhonvl { get; set; }

    public DxGrid dxGrid { get; set; }
    public DxGrid dxGridtotal { get; set; }
    List<NvlNhapXuatItemShow> lstdata { get; set; }
    private string showdate(DateTime? dt)
    {
        if (dt == null)
            return "";
        return dt.Value.ToString("dd-MM-yy");
    }
    protected override void OnAfterRender(bool firstRender)
    {

        if (firstRender)
        {
            dxGrid.Reload();
            StateHasChanged();
        }
    }
    private uint? uintparse(object ob)
    {
        if (ob == DBNull.Value)
            return null;
        return uint.Parse(ob.ToString());
    }
    private void expandorcollapse(int i)
    {
        if (dxGrid.IsDetailRowExpanded(i))
            dxGrid.CollapseDetailRow(i);
        else
            dxGrid.ExpandDetailRow(i);
    }
    double d = 0;
    private void valuesoluongchanged(double e, DataRowView rowview)
    {
        rowview["Total_SLDeNghi"] = e;
    }
    void OnCustomizeElement(GridCustomizeElementEventArgs e)
    {
        // if (e.ElementType == GridElementType.DataRow)
        // {
        //     string s = (string)e.Grid.GetRowValue(e.VisibleIndex, "NhomChiTiet");
        //     if (s == "Vế" || s == "Cụm")
        //     {
        //         e.CssClass = "highlighted-item";

        //     }

        // }
        if (e.ElementType == GridElementType.DataCell)
        {
            var dataColumn = (IGridDataColumn)e.Column;
            string s = dataColumn.FieldName;
            if (lstdate.Any())
            {
                if (s.EndsWith("KeHoach") || s.EndsWith("TonKho"))
                {
                    if (!s.Contains("Total"))
                    {
                        string[] arr = s.Split("_");
                        object obkehoach = e.Grid.GetRowValue(e.VisibleIndex, string.Format("{0}_{1}", arr[0], "KeHoach"));
                        object obtonkho = e.Grid.GetRowValue(e.VisibleIndex, string.Format("{0}_{1}", arr[0], "TonKho"));
                        if (obkehoach != null && obtonkho != null)
                        {
                            double kehoach = double.Parse(obkehoach.ToString());
                            double tonkho = double.Parse(obtonkho.ToString());
                            if (kehoach <= tonkho)
                            {
                                e.CssClass = "highGreen";
                            }
                            else
                            {
                                e.CssClass = "highTrans";
                            }
                        }
                    }
                    // object ob = e.Grid.GetRowValue(e.VisibleIndex, "Ton");

                }
            }



        }
    }

}