@using DevExpress.Blazor;
@using NFCWebBlazor.App_ModelClass;
@using Blazored.Modal
@using Blazored.Modal.Services
@using NFCWebBlazor.App_NguyenVatLieu.App_KeHoachDeNghi;
@using static NFCWebBlazor.App_NguyenVatLieu.App_KeHoachDeNghi.Page_KeHoachMuaHangMaster
@using static NFCWebBlazor.App_NguyenVatLieu.App_NhapXuat.Page_NhapXuat_Master
@using static NFCWebBlazor.App_NguyenVatLieu.App_DonDatHang.Page_KeHoachChuaXuatKho

<style>
    .my-grid {
    height: @heightgrid;
    }


    .custom-card {
    display: inline-flex;
    align-items: center;
    padding: 5px;
    max-height: 2.5rem;
    border-radius: 50px; /* Bo tròn cả thẻ a */
    border: 1px solid #ccc; /* Viền sát thẻ a */
    text-decoration: none;
    transition: all 0.3s ease;
    }

    .custom-card img {
    width: 24px;
    height: 24px;
    border-radius: 50%; /* Bo tròn hình ảnh */
    margin-right: 10px;
    }

    .custom-card span {
    font-size: 10px;
    color: #333;
    }

    .custom-card:hover {
    border-color: #007bff;
    background-color: #f0f8ff;
    }

    .animated-content {
    animation: slideIn 0.3s ease-out;
    }

</style>


<NFCWebBlazor.App_ClassDefine.DialogWindow @ref=@dxPopup>
    <BodyContentTemplate>
        @renderFragment
    </BodyContentTemplate>
</NFCWebBlazor.App_ClassDefine.DialogWindow>
<DxFlyout @ref=dxFlyoutchucnang
PositionTarget="@idflychucnang"
@bind-IsOpen=IsOpenfly
RestrictionTarget="#Navigation-Flyout-Customization"
AnimationType=FlyoutAnimationType.Fade
PreventCloseOnPositionTargetClick="true"
Width="500px"
Position=@(FlyoutPosition.BottomStart | FlyoutPosition.TopStart)>
    <ChildContent>
        <DxGrid @ref=dxGridTK
        TextWrapEnabled="false"
        ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
        CssClass="my-grid-max"
        ShowFilterRow="false"
        VirtualScrollingEnabled=true
        FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
        Data=@lstdataitem
        AutoExpandAllGroupRows=true>
            <ToolbarTemplate>
                <DxToolbar AdaptivityAutoCollapseItemsToIcons="false" ItemRenderStyleMode="ToolbarRenderStyleMode.Plain" SizeMode="SizeMode.Small">



                    <DxToolbarItem Text="Xuất excel" BeginGroup="true" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>dxGridTK.ExportToXlsxAsync("ExporBangKeTK"))">

                    </DxToolbarItem>

                    <DxToolbarItem Text="Chọn cột" BeginGroup="true" Click="@(()=>dxGridTK.ShowColumnChooser())" IconCssClass="bi bi-layout-text-window-reverse" />
                </DxToolbar>
            </ToolbarTemplate>
            <Columns>
                <DxGridDataColumn FieldName="SerialLink" Caption="ID tem" Width="90" DisplayFormat="#" />
                <DxGridDataColumn FieldName="TenHang" Caption="Tên hàng" GroupIndex="0" Width="240">
                    <GroupRowTemplate>
                        @{
                            NvlNhapXuatItemTemTK nvlNhapXuatItemTemTK = (NvlNhapXuatItemTemTK)context.Grid.GetDataItem(context.VisibleIndex);
                        }
                        <div class="d-flex">
                            <span>@nvlNhapXuatItemTemTK.TenHang</span>
                            <span style="color:forestgreen;margin-left:10px">@string.Format(" Đề nghị: {0} {1}", nvlNhapXuatItemTemTK.SLDeNghi.ToString("#,0.##"), nvlNhapXuatItemTemTK.DVT)</span>
                        </div>
                    </GroupRowTemplate>
                </DxGridDataColumn>
                <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="70" />
                <DxGridDataColumn FieldName="SLTon" Caption="SL Tồn" Width="110" DisplayFormat="#,0.##;-#,0.##;''" />
                <DxGridDataColumn FieldName="ViTri" Caption="ViTri" />

            </Columns>

        </DxGrid>
    </ChildContent>
</DxFlyout>



<DxGridLayout CssClass="w-100 ch-480">
    <Rows>

        <DxGridLayoutRow Height="auto" />
        <DxGridLayoutRow Height="auto" />
        <DxGridLayoutRow />
    </Rows>

    <Items>


        <DxGridLayoutItem Row="2">
            <Template>

                <DxLoadingPanel @bind-Visible="@PanelVisible"
                IsContentBlocked="true"
                ApplyBackgroundShading="true"
                IndicatorAreaVisible="false"
                Text="Đang xử lý...">
                    <DxGrid @ref="Grid" Data="@customRoot.lstdataitem"
                    AutoExpandAllGroupRows="true"
                    TextWrapEnabled="false"
                    CssClass="my-grid"
                    FocusedRowEnabled="false"
                    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
                    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
                    VirtualScrollingEnabled=true
                    ShowAllRows=false
                    ShowFilterRow=false>
                        <ToolbarTemplate>
                            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                                <DxToolbarItem Text="TÌM KIẾM" IconCssClass="bi bi-menu-button-wide" RenderStyle="ButtonRenderStyle.Danger" Click="@(()=>JSRuntime.InvokeVoidAsync(CallNameJson.toggleCollapse.ToString(),string.Format("#{0}",randomdivhide)))">
                                </DxToolbarItem>

                                <DxToolbarItem Text="Xem" IconCssClass="bi bi-search" RenderStyle="ButtonRenderStyle.Primary" Click="@searchAsync">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Xuất excel" Visible="!Ismobile" IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>Grid.ExportToXlsxAsync("ExporDeNghi"))">
                                </DxToolbarItem>
                                <DxToolbarItem Text="Chọn cột" Visible="!Ismobile" BeginGroup="true" Click="@(()=>Grid.ShowColumnChooser())" IconCssClass="bi bi-layout-text-window-reverse" />

                            </DxToolbar>
                        </ToolbarTemplate>
                        <Columns>
                            <DxGridDataColumn FieldName="PhanLoai" GroupIndex="0">
                                <GroupRowTemplate>
                                    @{
                                        NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItemShow = (NvlKeHoachMuaHangItemSummary)context.Grid.GetDataItem(context.VisibleIndex);
                                    }
                                    @if (!string.IsNullOrEmpty(nvlKeHoachMuaHangItemShow.TenSP))
                                    {
                                        <div class="row d-flex">
                                            <div class="col-auto text-danger align-content-center" style="min-width:150px;">
                                                <span>@nvlKeHoachMuaHangItemShow.TenSP</span>
                                            </div>

                                            <div class="col-auto card p-1" style="background-color:@nvlKeHoachMuaHangItemShow.Colorhex;min-width:150px;">
                                                <span style="color:@nvlKeHoachMuaHangItemShow.Colortext">@nvlKeHoachMuaHangItemShow.TenMau</span>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div style="display: flex; justify-content: space-between;width:400px;">
                                            <span style="color: forestgreen;">Đề nghị ngoài định mức</span>
                                        </div>
                                    }
                                </GroupRowTemplate>
                            </DxGridDataColumn>
                            
                            <DxGridDataColumn FieldName="KeyGroup" GroupIndex="1">
                                <GroupRowTemplate>
                                    @{
                                        if (context.GroupValue != null)
                                        {
                                            NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItemShow = (NvlKeHoachMuaHangItemSummary)context.Grid.GetDataItem(context.VisibleIndex);

                                            @if (nvlKeHoachMuaHangItemShow != null)
                                            {
                                                @if (nvlKeHoachMuaHangItemShow.KeyGroup != null)
                                                {

                                                    <div class="row d-flex">
                                                        <div class="col-auto">
                                                            <span style="color: forestgreen;margin-right:10px;">@nvlKeHoachMuaHangItemShow.TenDinhMuc</span>
                                                            <span style="color: orangered;">@string.Format("Công đoạn: {0}", nvlKeHoachMuaHangItemShow.CongDoan)</span>
                                                        </div>
                                                    </div>

                                                }

                                            }
                                        }

                                    }
                                </GroupRowTemplate>
                            </DxGridDataColumn>

                            <DxGridDataColumn FieldName="TenSP" Caption="Tên SP" Width="150" />
                            <DxGridDataColumn FieldName="CongDoan" Caption="Công đoạn" Width="120"></DxGridDataColumn>
                            <DxGridDataColumn FieldName="MaHang" Caption="Mã hàng" Width="120" Visible="!Ismobile" />
                            <DxGridDataColumn FieldName="TenHang" Caption="Tên hàng" Width="250">
                                <CellDisplayTemplate>
                                    @{
                                        NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItem = (NvlKeHoachMuaHangItemSummary)context.DataItem;
                                    }
                                    <a href="#" class="link-dark link-offset-2 link-underline-opacity-0 link-underline-opacity-100-hover"
                                    id=@idelement(nvlKeHoachMuaHangItem.Serial) @onclick="@(()=>ShowFlyout(nvlKeHoachMuaHangItem))">@nvlKeHoachMuaHangItem.TenHang</a>

                                </CellDisplayTemplate>
                            </DxGridDataColumn>

                            <DxGridDataColumn FieldName="DVT" Caption="ĐVT" Width="80" />
                            <DxGridDataColumn FieldName="SLQuyDoi" Caption="SL/ bộ" Width="80" DisplayFormat="#,0.######" />
                            <DxGridDataColumn FieldName="TyLe" Width="140" Caption="Hoàn thành">
                                <CellDisplayTemplate>
                                    <NFCWebBlazor.App_ClassDefine.ProgressBarDf value=@(((NvlKeHoachMuaHangItemSummary)context.DataItem).TyLe)></NFCWebBlazor.App_ClassDefine.ProgressBarDf>
                                </CellDisplayTemplate>
                            </DxGridDataColumn>
                            <DxGridBandColumn Caption="Đồng bộ">
                                <Columns>
                                    <DxGridDataColumn FieldName="DBSoLuong" DisplayFormat="#,0" Caption="Tổng đề nghị" Width="110" />
                                    <DxGridDataColumn FieldName="DBTheoDoi" DisplayFormat="#,0" Caption="Còn nợ" Width="90">
                                        <CellDisplayTemplate>
                                            @{
                                                NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItem = (NvlKeHoachMuaHangItemSummary)context.DataItem;

                                            }
                                            <span style="color:orangered;font-weight:bold">@string.Format("{0:#,0}", nvlKeHoachMuaHangItem.DBTheoDoi)</span>
                                        </CellDisplayTemplate>
                                    </DxGridDataColumn>
                                    <DxGridDataColumn FieldName="DBTon" DisplayFormat="#,0" Caption="Tồn kho" Width="90" />
                                </Columns>
                            </DxGridBandColumn>
                            <DxGridBandColumn Caption="Số lượng">
                                <Columns>
                                    <DxGridDataColumn FieldName="SoLuong" DisplayFormat="#,0.####" Caption="Tổng đề nghị" Width="110" />
                                    <DxGridDataColumn FieldName="SLTheoDoi" DisplayFormat="#,0.####" Caption="Còn nợ" Width="90">
                                        <CellDisplayTemplate>
                                            @{
                                                NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItem = (NvlKeHoachMuaHangItemSummary)context.DataItem;
                                                
                                            }
                                            <span style="color:orangered;font-weight:bold">@string.Format("{0:#,0.####}", nvlKeHoachMuaHangItem.SLTheoDoi)</span>
                                        </CellDisplayTemplate>
                                    </DxGridDataColumn>
                                     <DxGridDataColumn FieldName="SLHuy" DisplayFormat="#,0.####" Caption="SL Hủy" Width="90" Visible=false></DxGridDataColumn>
                                    <DxGridDataColumn FieldName="SLTon" DisplayFormat="#,0.##" Caption="Tồn kho" Width="90" />
                                </Columns>
                            </DxGridBandColumn>




                        </Columns>
                         <DetailRowTemplate>
                             @{
                                NvlKeHoachMuaHangItemSummary nvlKeHoachMuaHangItemSummary = (NvlKeHoachMuaHangItemSummary)context.DataItem;
                             }
                            <Page_KehoachChuaXuatKho_SummaryDetail nvlKeHoachMuaHangItemSummarycrr="@nvlKeHoachMuaHangItemSummary" ListSerialDN="@ListSerialDN"></Page_KehoachChuaXuatKho_SummaryDetail>
                          </DetailRowTemplate>
                    </DxGrid>

                </DxLoadingPanel>


            </Template>
        </DxGridLayoutItem>

    </Items>
</DxGridLayout>

@code {
    [Inject] public SignalRConnect signalRConnect { get; set; }
    [Inject] IJSRuntime JSRuntime { get; set; }
    [Inject] BrowserService browserService { get; set; }

    [Parameter]
    public DieuKienTimKiem dieuKienTimKiem { get; set; }
    [Parameter]
    public string randomdivhide{ get; set; }
    DxGrid dxGrid { get; set; }
    List<Users> lstnguoidenghi { get; set; }
    DxFlyout dxFlyoutchucnang { get; set; }
 
    public string idflychucnang { get; set; }
    public string random { get; set; }
    bool IsOpenfly { get; set; } = false;
    bool CheckPrint { get; set; } = false;
    IGrid? dxGridTK { get; set; }
    public string ListSerialDN { get; set; } = "";
    App_ClassDefine.ClassProcess prs = new App_ClassDefine.ClassProcess();
    List<NvlNhapXuatItemTemTK> lstdataitem { get; set; } = new List<NvlNhapXuatItemTemTK>();
    public string idelement(int? serial)
    {
        if (serial == null)
            string.Format("flychucnang_{0}_{1}", random, serial);
        if (random == null)
        {
            random = prs.RandomString(9);
        }
        return string.Format("flychucnang_{0}_{1}", random, serial);
    }
    string Nhomhang { get; set; }
    RenderFragment renderFragment;

    int? SerialDN { get; set; }
    bool Ismobile { get; set; }
    string nguoidenghi { get; set; }
    List<DataDropDownList> lstkhonvl { get; set; }
   
    DialogWindow dxPopup;
    DxGrid Grid;
    bool PanelVisible = false;
    IEnumerable<DataDropDownList>? lsttrangthai { get; set; }

    string MaKho { get; set; }
    string TenKho { get; set; }



    public string trangthai { get; set; } = "Đề nghị chưa hoàn thành";
    string heightgrid = "500px";
    string divClass = "expandable-content";
    private bool isExpanded = false;

    // Hàm xử lý sự kiện click của nút


}
