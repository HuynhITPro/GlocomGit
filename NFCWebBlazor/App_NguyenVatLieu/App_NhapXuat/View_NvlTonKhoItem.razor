@using System.Data
@using BlazorBootstrap
@using NFCWebBlazor.Model
@using Newtonsoft.Json
@using static NFCWebBlazor.App_NguyenVatLieu.App_NhapXuat.Page_NvlTonKho
<DxLoadingPanel @bind-Visible="@PanelVisible"
IsContentBlocked="true"
ApplyBackgroundShading="true"
IndicatorAreaVisible="false"
Text="Đang xử lý...">
    <DxGrid @ref=dxGrid

    ColumnResizeMode="GridColumnResizeMode.ColumnsContainer"
    VirtualScrollingEnabled="true"
    TextWrapEnabled="false"
    AllowSort="false"
    FilterMenuButtonDisplayMode="GridFilterMenuButtonDisplayMode.Always"
    Data=@lstdata
    AutoExpandAllGroupRows="false">
        <ToolbarTemplate>
            <DxToolbar ItemRenderStyleMode="ToolbarRenderStyleMode.Plain">
                <DxToolbarItem Text="Tải lại" IconCssClass="bi bi-arrow-clockwise" RenderStyle="ButtonRenderStyle.Primary" Click="@load">
                </DxToolbarItem>
                <DxToolbarItem Text="Xuất excel"  IconCssClass="bi bi-filetype-xlsx" RenderStyle="ButtonRenderStyle.Secondary" Click="@(()=>dxGrid.ExportToXlsxAsync("ExporNhapXuatKho"))">
                </DxToolbarItem>

            </DxToolbar>
        </ToolbarTemplate>
        <Columns>
            <DxGridDataColumn FieldName="Ngay" Caption="Ngày" Width="100" />
            <DxGridDataColumn FieldName="TenGN" Caption="Nơi giao nhận" Width="260" />
            <DxGridDataColumn FieldName="SLNhap" Caption="SL Nhập" Width="110" DisplayFormat="#,0.##;-#,0.##;''" />
            <DxGridDataColumn FieldName="SLXuat" Caption="SL Xuất" Width="110" DisplayFormat="#,0.##;-#,0.##;''" />
            <DxGridDataColumn FieldName="SLTon" Visible="@showTK" Caption="SL Tồn" Width="110" DisplayFormat="#,0.##;-#,0.##;''" />
        </Columns>
        <TotalSummary>
            <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum"
                               FieldName="TenGN"
                               Name="TenGN"
                               DisplayText="Tổng:" />
            <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum"
                               FieldName="SLNhap"
                               Name="SLNhap"
                               DisplayText="{0}"
                                />
            <DxGridSummaryItem SummaryType="GridSummaryItemType.Sum"
                               FieldName="SLXuat"
                               Name="SLXuat"
                               DisplayText="{0}"
                                />

        </TotalSummary>
    </DxGrid>
</DxLoadingPanel>

@code {
    [Inject] ToastService toastService { get; set; }
    [Parameter]
    public DataRowView dataRowView { get; set; }
    [Parameter]
    public string sqlquery{ get; set; }
    [Parameter]
    public  List<ParameterDefine>lstpara{ get; set; }
    [Parameter]
    public bool isMobile { get; set; }
    [Parameter]
    public bool showTK { get; set; }=false;
    DxGrid dxGrid{ get; set; }
    
    bool PanelVisible { get; set; } = false;
    List<LoadItemTheKho>lstdata{ get; set; }
    protected override Task OnInitializedAsync()
    {
        _= load();
        return base.OnInitializedAsync();
    }
    private  async Task  load()
    {
        if (dataRowView.Row["lstitem"] == DBNull.Value || dataRowView.Row["lstitem"] == null)
        {
            CallAPI callAPI = new CallAPI();
            try
            {
                PanelVisible = true;
                string json = await callAPI.ExcuteQueryEncryptAsync(sqlquery, lstpara);
                if (json != "")
                {
                    var query = JsonConvert.DeserializeObject<List<LoadItemTheKho>>(json);
                    lstdata=query;
                    dataRowView["lstitem"] = lstdata;
                }
            }
            catch (Exception ex)
            {
                toastService.Notify(new ToastMessage(ToastType.Danger, "Lỗi:" + ex.Message));
            }
            finally
            {
                dxGrid.Reload();
                PanelVisible = false;
                StateHasChanged();
            }
        }
        else
        {
            lstdata = (List<LoadItemTheKho>)dataRowView["lstitem"];
            StateHasChanged();
        }
           
    }
}
